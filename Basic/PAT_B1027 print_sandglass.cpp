/*
1027. 打印沙漏(20)
时间限制：200ms  内存限制：64MB  代码长度限制：16KB

题目描述：
本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印

*****
 ***
  *
 ***
*****

所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。
给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。

输入格式：
输入在一行给出1个正整数N（<=1000）和一个符号，中间以空格分隔。

输出格式：
首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。

输入样例：
19 *

输出样例：
*****
 ***
  *
 ***
*****
2
 */



#include <cstdio>
#include <cmath> // sqrt函数头文件 

int main()
{
	int n, count; // 输入字符数，沙漏字符数 
	char c;  // 待输入字符 
	scanf("%d %c", &n, &c);
	
	
	// 首项为1，公差为2，项数为row的等差数列求和，再乘2减1即为字符总数n 
	int row = sqrt((n + 1) / 2.0); // 沙漏从第一行到最中间那行总共行数
	// 首项为1，公差为2，项数为row的等差数列第row项通项公式 
	int col = (row - 1) * 2 + 1; // 沙漏第一行列数
	
	int col_temp = col; // 暂存col值 
	while (col_temp > 0) {
		// 从第二行起，每增加一行，字符数减2，首端输出空格数加1 
		for (int i = 0; i < (col - col_temp) / 2; i++) {
			printf(" ");
		}
		// 根据每一行字符数要求输出相应字符并统计数量 
		for (int i = 0; i < col_temp; i++) {
			printf("%c", c);
			count++;
		}
		printf("\n"); // 每行输完换行 
		col_temp -= 2; // 字符数减2得到下一行字符数 
	}
	
	col_temp = 3; // 最中间那行字符数为1，下一行即为3 
	while (col_temp <= col) {
		// 从最中间那行的下一行起，每增加一行，字符数加2，首端输出空格数减1 
		for (int i = 0; i < (col - col_temp) / 2; i++) {
			printf(" ");
		}
		// 根据每一行字符数要求输出相应字符并统计数量 
		for (int i = 0; i < col_temp; i++) {
			printf("%c", c);
			count++;
		}
		printf("\n"); // 每行输完换行
		col_temp += 2; // 字符数加2得到下一行字符数 
	}
	
	printf("%d\n", n - count); // 输出原有字符数和沙漏所用字符数之差 
	return 0;
}
