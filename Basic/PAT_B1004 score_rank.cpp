/*
1004. 成绩排名 (20)
时间限制：400 ms  内存限制：65536 kB  代码长度限制：8000 B

题目描述： 
读入n名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。

输入格式：
每个测试输入包含1个测试用例，格式为
  第1行：正整数n
  第2行：第1个学生的姓名 学号 成绩
  第3行：第2个学生的姓名 学号 成绩
  ... ... ...
  第n+1行：第n个学生的姓名 学号 成绩
其中姓名和学号均为不超过10个字符的字符串，成绩为0到100之间的一个整数，
这里保证在一组测试用例中没有两个学生的成绩是相同的。
输出格式：
对每个测试用例输出2行，第1行是成绩最高学生的姓名和学号，
第2行是成绩最低学生的姓名和学号，字符串间有1空格。
输入样例：
3
Joe Math990112 89
Mike CS991301 100
Mary EE990830 95
输出样例：
Mike CS991301
Joe Math990112
 */



#include <cstdio>

struct student {
	char name[15]; // 姓名 
	char ID[15]; // 学号 
	int score; // 成绩 
};

int main()
{
	int n, max, min, max_i, min_i;
	scanf("%d", &n);
	student stu[n]; // 学生结构体数组 
	for (int i = 0; i < n; i++) {
		scanf("%s %s %d", &stu[i].name, &stu[i].ID, &stu[i].score);
		if (i == 0) { // 最高成绩、最低成绩均初始化为第一个学生的成绩 
			max = stu[i].score;
			max_i = i;
			min = stu[i].score;
			min_i = i;
		}
		if (stu[i].score > max) { // 比较得出最高成绩及其数组下标 
			max = stu[i].score;
			max_i = i;
		}
		if (stu[i].score < min) { // 比较得出最低成绩及其数组下标
			min = stu[i].score;
			min_i = i;
		}
	}
	
	printf("%s %s\n", stu[max_i].name, stu[max_i].ID); // 输出成绩最高者信息 
	printf("%s %s\n", stu[min_i].name, stu[min_i].ID); // 输出成绩最低者信息
	return 0;
}
