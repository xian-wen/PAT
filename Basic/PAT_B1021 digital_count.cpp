/*
1021. 个位数统计 (15)
时间限制：100ms  内存限制：64MB  代码长度限制：16KB

题目描述：
给定一个k位整数N = d~k-1~*10^k-1^ + ... + d~1~*10^1^ + d~0~ (0<=d~i~<=9, i=0,...,k-1, d~k-1~>0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定N = 100311，则有2个0，3个1，和1个3。

输入格式：
每个输入包含1个测试用例，即一个不超过1000位的正整数N。

输出格式：
对N中每一种不同的个位数字，以D:M的格式在一行中输出该位数字D及其在N中出现的次数M。要求按D的升序输出。

输入样例：
100311

输出样例：
0:2
1:3
3:1
 */



#include <cstdio>
#include <cstring> // strlen函数头文件 

const int maxn = 1010;

int main()
{
	char n[maxn]; // 以字符串形式保存正整数 
	gets(n); // 输入正整数 
	
	int len = strlen(n); // 求正整数位数 
	int d, m[10] = {0}; // 某位上数字d，数组m保存d出现次数 
	
	for (int i = 0; i < len; i++) { // 统计数字出现次数 
		d = n[i] - '0'; // 将数字字符转换成数字，如'0'（ASCII为48）转换成0 
		m[d]++; // 对应数字次数加1 
	}
	
	for (int i = 0; i < 10; i++) { // 输出所有数字对应的次数 
		if (m[i]) printf("%d:%d\n", i, m[i]);
	}
	return 0;
}
